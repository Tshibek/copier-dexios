# Build Arguments and Environment Variables
ARG APP_HOME=/app
ARG PYTHON_VERSION=3.12
ENV UV_COMPILE_BYTECODE=1 \
UV_LINK_MODE=copy \
UV_PYTHON_DOWNLOADS=0 \
PATH="/app/.venv/bin:$PATH"

# Client Build Stage
FROM oven/bun:1 AS client-builder
WORKDIR ${APP_HOME}
COPY ./package.json ./bun.lock ${APP_HOME}
RUN bun install --no-cache
COPY . ${APP_HOME}
RUN bun run build

# Python Base Image
FROM docker.io/python:${PYTHON_VERSION}-slim-bookworm AS python

# Python Build Stage
FROM ghcr.io/astral-sh/uv:python${PYTHON_VERSION}-bookworm-slim AS python-build-stage
WORKDIR ${APP_HOME}

# Install Build Dependencies
RUN apt-get update && apt-get install --no-install-recommends -y \
build-essential \
libpq-dev

# Install Python Requirements
COPY --from=client-builder ${APP_HOME} ${APP_HOME}
RUN --mount=type=cache,target=/root/.cache/uv \
--mount=type=bind,source=uv.lock,target=uv.lock \
--mount=type=bind,source=pyproject.toml,target=pyproject.toml \
uv sync --frozen --no-dev

# Production Runtime Stage
FROM python:${PYTHON_VERSION}-slim-bookworm AS python-run-stage
WORKDIR ${APP_HOME}

# Create User and Group
RUN addgroup --system django && \
adduser --system --ingroup django django

# Install Runtime Dependencies
RUN apt-get update && apt-get install --no-install-recommends -y \
libpq-dev \
gettext \
wait-for-it && \
apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false && \
rm -rf /var/lib/apt/lists/*

# Setup Script Files
COPY --chown=django:django ./compose/production/django/entrypoint /entrypoint
COPY --chown=django:django ./compose/production/django/start /start
COPY --chown=django:django ./compose/production/django/celery/worker/start /start-celeryworker
COPY --chown=django:django ./compose/production/django/celery/beat/start /start-celerybeat
COPY --chown=django:django ./compose/production/django/celery/flower/start /start-flower

# Set Script Permissions
RUN for script in /entrypoint /start /start-celeryworker /start-celerybeat /start-flower; do \
sed -i 's/\r$//g' $script && \
chmod +x $script; \
done

# Copy Application and Set Permissions
COPY --from=python-build-stage --chown=django:django ${APP_HOME} ${APP_HOME}
RUN chown django:django ${APP_HOME} && \
mkdir -p ${APP_HOME}/{{ project_name }}/media

# Switch to Non-Root User
USER django

# Compile Messages
RUN DATABASE_URL="" \
DJANGO_SETTINGS_MODULE="config.settings.test" \
python manage.py compilemessages

ENTRYPOINT ["/entrypoint"]